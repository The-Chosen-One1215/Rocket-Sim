# working.py
from terminal import terminal
from rocket_calculations import thrust_force, specific_impulse, delta_v, drag_force

def show_help(topic):
    help_topics = {
        "THRUST": """
        THRUST Calculation:
        -------------------
        Formula: F_thrust = m_dot * (V_e - V_0)
        - m_dot: Mass flow rate (kg/s)
        - V_e: Exhaust velocity (m/s)
        - V_0: Initial velocity of the rocket (m/s)
        
        Purpose: Calculates the force generated by the rocket engine.
        Example: High exhaust velocity increases thrust.
        """,
        "ISP": """
        Specific Impulse (ISP) Calculation:
        -----------------------------------
        Formula: Isp = F_thrust / (m_dot * g₀)
        - F_thrust: Thrust force (N)
        - m_dot: Mass flow rate (kg/s)
        - g₀: Standard gravity (9.81 m/s²)
        
        Purpose: Measures fuel efficiency of the engine.
        Example: Higher ISP means better efficiency.
        """,
        "DELTAV": """
        Delta-V (Δv) Calculation:
        -------------------------
        Formula: Δv = Isp * g₀ * ln(m₀ / m_f)
        - Isp: Specific impulse (s)
        - m₀: Initial mass (kg)
        - m_f: Final mass (kg)
        
        Purpose: Represents change in velocity needed for maneuvers.
        Example: Higher Δv allows for higher orbits.
        """,
        "DRAG": """
        Drag Force Calculation:
        -----------------------
        Formula: F_drag = 0.5 * C_d * A * ρ * V²
        - C_d: Drag coefficient
        - A: Cross-sectional area (m²)
        - ρ: Air density (kg/m³)
        - V: Velocity (m/s)
        
        Purpose: Calculates aerodynamic drag on the rocket.
        Example: Lower drag improves rocket efficiency.
        """,
        "VERSION" : """
        Version number 0.1.5
        Functions: thrust, isp, deltav, and drag 
        """,
        "VER" : """
        Version number 0.1.5
        Functions: thrust, isp, deltav, and drag 
        """
    }

    topic = topic.upper()
    if topic in help_topics:
        print(help_topics[topic])
    else:
        print("Help topic not found. Try HELP.THRUST, HELP.ISP, HELP.DELTAV, or HELP.DRAG or look at the manule in the folder")

def handle_command(command):
    if command.startswith("HELP."):
        _, topic = command.split(".")
        show_help(topic)
    elif command == "THRUST":
        m_dot = float(input("Enter mass flow rate (kg/s): "))
        V_e = float(input("Enter exhaust velocity (m/s): "))
        V_0 = float(input("Enter initial velocity (m/s): "))
        thrust = thrust_force(m_dot, V_e, V_0)
        print(f"Thrust Force: {thrust:.2f} N")
    elif command == "ISP":
        F_thrust = float(input("Enter thrust force (N): "))
        m_dot = float(input("Enter mass flow rate (kg/s): "))
        isp = specific_impulse(F_thrust, m_dot)
        print(f"Specific Impulse: {isp:.2f} s")
    elif command == "DELTAV":
        Isp = float(input("Enter specific impulse (s): "))
        m0 = float(input("Enter initial mass (kg): "))
        mf = float(input("Enter final mass (kg): "))
        delta_v_result = delta_v(Isp, m0, mf)
        print(f"Delta-V: {delta_v_result:.2f} m/s")
    elif command == "DRAG":
        C_d = float(input("Enter drag coefficient: "))
        A = float(input("Enter cross-sectional area (m²): "))
        rho = float(input("Enter air density (kg/m³): "))
        V = float(input("Enter velocity (m/s): "))
        drag = drag_force(C_d, A, rho, V)
        print(f"Drag Force: {drag:.2f} N")
    else:
        print("Unknown command. Try THRUST, ISP, DELTAV, DRAG, or HELP.<command>.")
